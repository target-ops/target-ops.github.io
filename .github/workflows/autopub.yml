name: publish
on:
  push:
    branches: [feature/autopush]
  pull_request:
    branches: [feature/autopush]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allows writing to the repository
      pull-requests: write  # Allows creating and modifying pull requests

    steps:
    - uses: actions/checkout@v2

    - name: Check if markdown files exist
      id: check_files
      run: |
        echo "Checking for Markdown files in the posts directory..."
        ls -A posts/**/*.md 2>/dev/null || echo "No markdown files found."
        
        if [ -z "$(ls -A posts/**/*.md 2>/dev/null)" ]; then
          echo "No markdown files found in the posts directory."
          exit 1
        else
          echo "Markdown files found:"
          ls -A posts/**/*.md
        fi

    - name: Publish articles on dev.to
      env:
        DEVTO_TOKEN: ${{ secrets.DEVTO_TOKEN }}
      run: |
        # Loop through each markdown file in the posts directory
        for file in posts/**/*.md; do
          echo "Processing $file..."
          
          # Extract the title and published status from the front matter
          TITLE=$(grep '^title:' "$file" | sed 's/title: //')
          PUBLISHED=$(grep '^published:' "$file" | sed 's/published: //')
          
          # Extract the content without front matter
          CONTENT=$(awk 'BEGIN {flag=0} /^---$/ {flag++; next} flag==2 {print}' "$file")

          # Create the JSON payload for the POST request
          JSON_PAYLOAD=$(jq -n \
            --arg title "$TITLE" \
            --arg body "$CONTENT" \
            --argjson published $(if [[ "$PUBLISHED" =~ ^(true|yes|1)$ ]]; then echo true; else echo false; fi) \
            '{
              "article": {
                "title": $title,
                "body_markdown": $body,
                "published": $published,
                "organization_id": 9126
              }
            }')
          
          # Send the POST request to dev.to
          curl -X POST "https://dev.to/api/articles" \
            -H "Content-Type: application/json" \
            -H "api-key: $DEVTO_TOKEN" \
            -d "$JSON_PAYLOAD"
        done

    - uses: actions-ecosystem/action-create-comment@v1
      if: ${{ github.event_name == 'pull_request' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          Articles processed in this pull request:
          ```
          ${{ steps.publish.outputs.result_summary }}
          ```
